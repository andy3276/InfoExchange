<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>


  <!--initial pose -->
  <arg name="x" default="0"/>
  <arg name="y" default="0"/>
  <arg name="z" default="0"/>
  <arg name="roll" default="0"/>
  <arg name="pitch" default="0"/>
  <arg name="yaw" default="3.14"/>


  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find pb_gazebo)/worlds/pairbot.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

	<!-- Run the pairbot in the namespace to fit the tf name in `move_base.py`(in the pb_control.launch) -->
	<group ns = "pairbot">
  <!-- Load the URDF into the ROS Parameter Server -->
	  <param name="robot_description"
			command="$(find xacro)/xacro.py '$(find pb_description)/urdf/pairbot.xacro'" />
  	<param name="imu_used" value="true"/>
  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
		args="-urdf -model pairbot -param robot_description -x $(arg x) -y $(arg y) -z $(arg z)
              -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>
	<!--robot_state_publisher-->
		<param name="tf_prefix" value="pairbot"/>
		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
          respawn="false" output="screen">
			<param name="publish_frequency" type="double" value="50.0" />
        <!--<remap from="joint_states" to="pairbot/joint_states"/>-->
    </node>
  <!-- ros_control eng launch file -->
    <include file="$(find pb_control)/launch/pb_control.launch">
			<arg name="namespace" value="tracer"/>
		</include>
	</group>




</launch>
